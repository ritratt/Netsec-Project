# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ct/proto/client.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import ct.proto.tls_options_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ct/proto/client.proto',
  package='ct',
  serialized_pb='\n\x15\x63t/proto/client.proto\x12\x02\x63t\x1a\x1a\x63t/proto/tls_options.proto\"\\\n\x07KeyInfo\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.ct.KeyInfo.KeyType\x12\x0f\n\x07pem_key\x18\x02 \x01(\t\"\x1d\n\x07KeyType\x12\t\n\x05\x45\x43\x44SA\x10\x00\x12\x07\n\x03RSA\x10\x01\"6\n\x11\x43ompactMerkleTree\x12\x11\n\ttree_size\x18\x01 \x01(\x04\x12\x0e\n\x06hashes\x18\x02 \x03(\x0c\"Y\n\rCtLogMetadata\x12\x12\n\nlog_server\x18\x01 \x01(\t\x12\x0e\n\x06log_id\x18\x02 \x01(\t\x12$\n\x0fpublic_key_info\x18\x03 \x01(\x0b\x32\x0b.ct.KeyInfo\"*\n\x06\x43tLogs\x12 \n\x05\x63tlog\x18\x01 \x03(\x0b\x32\x11.ct.CtLogMetadata\"j\n\x0bSthResponse\x12\x11\n\ttree_size\x18\x01 \x01(\x04\x12\x11\n\ttimestamp\x18\x02 \x01(\x04\x12\x18\n\x10sha256_root_hash\x18\x03 \x01(\x0c\x12\x1b\n\x13tree_head_signature\x18\x04 \x01(\x0c\"-\n\tAuditInfo\x12 \n\x06status\x18\x01 \x01(\x0e\x32\x10.ct.VerifyStatus\"H\n\nAuditedSth\x12\x1c\n\x03sth\x18\x01 \x01(\x0b\x32\x0f.ct.SthResponse\x12\x1c\n\x05\x61udit\x18\x02 \x01(\x0b\x32\r.ct.AuditInfo\"7\n\rEntryResponse\x12\x12\n\nleaf_input\x18\x01 \x01(\x0c\x12\x12\n\nextra_data\x18\x02 \x01(\x0c\"=\n\x13ProofByHashResponse\x12\x12\n\nleaf_index\x18\x01 \x01(\x04\x12\x12\n\naudit_path\x18\x02 \x03(\x0c\"M\n\x15\x45ntryAndProofResponse\x12 \n\x05\x65ntry\x18\x01 \x01(\x0b\x32\x11.ct.EntryResponse\x12\x12\n\naudit_path\x18\x02 \x03(\x0c\"\x89\x01\n\x0cMonitorState\x12%\n\x0cverified_sth\x18\x01 \x01(\x0b\x32\x0f.ct.SthResponse\x12$\n\x0bpending_sth\x18\x02 \x01(\x0b\x32\x0f.ct.SthResponse\x12,\n\rverified_tree\x18\x03 \x01(\x0b\x32\x15.ct.CompactMerkleTree\"T\n\x07PreCert\x12\x1f\n\x0fissuer_key_hash\x18\x01 \x01(\x0c\x42\x06\x82\xb5\x18\x02\x18 \x12(\n\x0ftbs_certificate\x18\x02 \x01(\x0c\x42\x0f\x82\xb5\x18\x02 \x01\x82\xb5\x18\x05(\xff\xff\xff\x07\"\xdd\x01\n\x10TimestampedEntry\x12\x11\n\ttimestamp\x18\x01 \x01(\x04\x12$\n\nentry_type\x18\x02 \x01(\x0e\x32\x10.ct.LogEntryType\x12\x38\n\tasn1_cert\x18\x03 \x01(\x0c\x42%\x82\xb5\x18\x0c\x42\nentry_type\x82\xb5\x18\x02H\x00\x82\xb5\x18\x02 \x01\x82\xb5\x18\x05(\xff\xff\xff\x07\x12\x35\n\x08pre_cert\x18\x04 \x01(\x0b\x32\x0b.ct.PreCertB\x16\x82\xb5\x18\x0c\x42\nentry_type\x82\xb5\x18\x02H\x01\x12\x1f\n\rct_extensions\x18\x05 \x01(\x0c\x42\x08\x82\xb5\x18\x04(\xff\xff\x03\"\x9d\x01\n\x0eMerkleTreeLeaf\x12\x1c\n\x07version\x18\x01 \x01(\x0e\x32\x0b.ct.Version\x12%\n\tleaf_type\x18\x02 \x01(\x0e\x32\x12.ct.MerkleLeafType\x12\x46\n\x11timestamped_entry\x18\x03 \x01(\x0b\x32\x14.ct.TimestampedEntryB\x15\x82\xb5\x18\x0b\x42\tleaf_type\x82\xb5\x18\x02H\x00\"u\n\x11PrecertChainEntry\x12(\n\x0fpre_certificate\x18\x01 \x01(\x0c\x42\x0f\x82\xb5\x18\x02 \x01\x82\xb5\x18\x05(\xff\xff\xff\x07\x12\x36\n\x14precertificate_chain\x18\x02 \x03(\x0c\x42\x18\x82\xb5\x18\x02 \x01\x82\xb5\x18\x05(\xff\xff\xff\x07\x82\xb5\x18\x05\x38\xff\xff\xff\x07\"\xd0\x01\n\tExtraData\x12,\n\nentry_type\x18\x01 \x01(\x0e\x32\x10.ct.LogEntryTypeB\x06\x82\xb5\x18\x02P\x01\x12I\n\x11\x63\x65rtificate_chain\x18\x02 \x03(\x0c\x42.\x82\xb5\x18\x0c\x42\nentry_type\x82\xb5\x18\x02H\x00\x82\xb5\x18\x02 \x01\x82\xb5\x18\x05(\xff\xff\xff\x07\x82\xb5\x18\x05\x38\xff\xff\xff\x07\x12J\n\x13precert_chain_entry\x18\x03 \x01(\x0b\x32\x15.ct.PrecertChainEntryB\x16\x82\xb5\x18\x0c\x42\nentry_type\x82\xb5\x18\x02H\x01\"Y\n\x0bParsedEntry\x12\'\n\x0bmerkle_leaf\x18\x01 \x01(\x0b\x32\x12.ct.MerkleTreeLeaf\x12!\n\nextra_data\x18\x02 \x01(\x0b\x32\r.ct.ExtraData*>\n\x0cVerifyStatus\x12\x0c\n\x08VERIFIED\x10\x00\x12\x0e\n\nUNVERIFIED\x10\x01\x12\x10\n\x0cVERIFY_ERROR\x10\x02*\x1a\n\x07Version\x12\x06\n\x02V1\x10\x00\x1a\x07\x8a\xb5\x18\x03\x10\xff\x01*0\n\x0eMerkleLeafType\x12\x15\n\x11TIMESTAMPED_ENTRY\x10\x00\x1a\x07\x8a\xb5\x18\x03\x10\xff\x01*;\n\x0cLogEntryType\x12\x0e\n\nX509_ENTRY\x10\x00\x12\x11\n\rPRECERT_ENTRY\x10\x01\x1a\x08\x8a\xb5\x18\x04\x10\xff\xff\x03')

_VERIFYSTATUS = _descriptor.EnumDescriptor(
  name='VerifyStatus',
  full_name='ct.VerifyStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VERIFIED', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNVERIFIED', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VERIFY_ERROR', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1801,
  serialized_end=1863,
)

VerifyStatus = enum_type_wrapper.EnumTypeWrapper(_VERIFYSTATUS)
_VERSION = _descriptor.EnumDescriptor(
  name='Version',
  full_name='ct.Version',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='V1', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), '\212\265\030\003\020\377\001'),
  serialized_start=1865,
  serialized_end=1891,
)

Version = enum_type_wrapper.EnumTypeWrapper(_VERSION)
_MERKLELEAFTYPE = _descriptor.EnumDescriptor(
  name='MerkleLeafType',
  full_name='ct.MerkleLeafType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TIMESTAMPED_ENTRY', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), '\212\265\030\003\020\377\001'),
  serialized_start=1893,
  serialized_end=1941,
)

MerkleLeafType = enum_type_wrapper.EnumTypeWrapper(_MERKLELEAFTYPE)
_LOGENTRYTYPE = _descriptor.EnumDescriptor(
  name='LogEntryType',
  full_name='ct.LogEntryType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='X509_ENTRY', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PRECERT_ENTRY', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), '\212\265\030\004\020\377\377\003'),
  serialized_start=1943,
  serialized_end=2002,
)

LogEntryType = enum_type_wrapper.EnumTypeWrapper(_LOGENTRYTYPE)
VERIFIED = 0
UNVERIFIED = 1
VERIFY_ERROR = 2
V1 = 0
TIMESTAMPED_ENTRY = 0
X509_ENTRY = 0
PRECERT_ENTRY = 1


_KEYINFO_KEYTYPE = _descriptor.EnumDescriptor(
  name='KeyType',
  full_name='ct.KeyInfo.KeyType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ECDSA', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RSA', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=120,
  serialized_end=149,
)


_KEYINFO = _descriptor.Descriptor(
  name='KeyInfo',
  full_name='ct.KeyInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ct.KeyInfo.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pem_key', full_name='ct.KeyInfo.pem_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _KEYINFO_KEYTYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=57,
  serialized_end=149,
)


_COMPACTMERKLETREE = _descriptor.Descriptor(
  name='CompactMerkleTree',
  full_name='ct.CompactMerkleTree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tree_size', full_name='ct.CompactMerkleTree.tree_size', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hashes', full_name='ct.CompactMerkleTree.hashes', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=151,
  serialized_end=205,
)


_CTLOGMETADATA = _descriptor.Descriptor(
  name='CtLogMetadata',
  full_name='ct.CtLogMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_server', full_name='ct.CtLogMetadata.log_server', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='log_id', full_name='ct.CtLogMetadata.log_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='public_key_info', full_name='ct.CtLogMetadata.public_key_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=207,
  serialized_end=296,
)


_CTLOGS = _descriptor.Descriptor(
  name='CtLogs',
  full_name='ct.CtLogs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ctlog', full_name='ct.CtLogs.ctlog', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=298,
  serialized_end=340,
)


_STHRESPONSE = _descriptor.Descriptor(
  name='SthResponse',
  full_name='ct.SthResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tree_size', full_name='ct.SthResponse.tree_size', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='ct.SthResponse.timestamp', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sha256_root_hash', full_name='ct.SthResponse.sha256_root_hash', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tree_head_signature', full_name='ct.SthResponse.tree_head_signature', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=342,
  serialized_end=448,
)


_AUDITINFO = _descriptor.Descriptor(
  name='AuditInfo',
  full_name='ct.AuditInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ct.AuditInfo.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=450,
  serialized_end=495,
)


_AUDITEDSTH = _descriptor.Descriptor(
  name='AuditedSth',
  full_name='ct.AuditedSth',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sth', full_name='ct.AuditedSth.sth', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='audit', full_name='ct.AuditedSth.audit', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=497,
  serialized_end=569,
)


_ENTRYRESPONSE = _descriptor.Descriptor(
  name='EntryResponse',
  full_name='ct.EntryResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='leaf_input', full_name='ct.EntryResponse.leaf_input', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extra_data', full_name='ct.EntryResponse.extra_data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=571,
  serialized_end=626,
)


_PROOFBYHASHRESPONSE = _descriptor.Descriptor(
  name='ProofByHashResponse',
  full_name='ct.ProofByHashResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='leaf_index', full_name='ct.ProofByHashResponse.leaf_index', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='audit_path', full_name='ct.ProofByHashResponse.audit_path', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=628,
  serialized_end=689,
)


_ENTRYANDPROOFRESPONSE = _descriptor.Descriptor(
  name='EntryAndProofResponse',
  full_name='ct.EntryAndProofResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entry', full_name='ct.EntryAndProofResponse.entry', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='audit_path', full_name='ct.EntryAndProofResponse.audit_path', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=691,
  serialized_end=768,
)


_MONITORSTATE = _descriptor.Descriptor(
  name='MonitorState',
  full_name='ct.MonitorState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='verified_sth', full_name='ct.MonitorState.verified_sth', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pending_sth', full_name='ct.MonitorState.pending_sth', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='verified_tree', full_name='ct.MonitorState.verified_tree', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=771,
  serialized_end=908,
)


_PRECERT = _descriptor.Descriptor(
  name='PreCert',
  full_name='ct.PreCert',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='issuer_key_hash', full_name='ct.PreCert.issuer_key_hash', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002\030 ')),
    _descriptor.FieldDescriptor(
      name='tbs_certificate', full_name='ct.PreCert.tbs_certificate', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002 \001\202\265\030\005(\377\377\377\007')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=910,
  serialized_end=994,
)


_TIMESTAMPEDENTRY = _descriptor.Descriptor(
  name='TimestampedEntry',
  full_name='ct.TimestampedEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='ct.TimestampedEntry.timestamp', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='entry_type', full_name='ct.TimestampedEntry.entry_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='asn1_cert', full_name='ct.TimestampedEntry.asn1_cert', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\000\202\265\030\002 \001\202\265\030\005(\377\377\377\007')),
    _descriptor.FieldDescriptor(
      name='pre_cert', full_name='ct.TimestampedEntry.pre_cert', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\001')),
    _descriptor.FieldDescriptor(
      name='ct_extensions', full_name='ct.TimestampedEntry.ct_extensions', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\004(\377\377\003')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=997,
  serialized_end=1218,
)


_MERKLETREELEAF = _descriptor.Descriptor(
  name='MerkleTreeLeaf',
  full_name='ct.MerkleTreeLeaf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='ct.MerkleTreeLeaf.version', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='leaf_type', full_name='ct.MerkleTreeLeaf.leaf_type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamped_entry', full_name='ct.MerkleTreeLeaf.timestamped_entry', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\013B\tleaf_type\202\265\030\002H\000')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1221,
  serialized_end=1378,
)


_PRECERTCHAINENTRY = _descriptor.Descriptor(
  name='PrecertChainEntry',
  full_name='ct.PrecertChainEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pre_certificate', full_name='ct.PrecertChainEntry.pre_certificate', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value="",
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002 \001\202\265\030\005(\377\377\377\007')),
    _descriptor.FieldDescriptor(
      name='precertificate_chain', full_name='ct.PrecertChainEntry.precertificate_chain', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002 \001\202\265\030\005(\377\377\377\007\202\265\030\0058\377\377\377\007')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1380,
  serialized_end=1497,
)


_EXTRADATA = _descriptor.Descriptor(
  name='ExtraData',
  full_name='ct.ExtraData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entry_type', full_name='ct.ExtraData.entry_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002P\001')),
    _descriptor.FieldDescriptor(
      name='certificate_chain', full_name='ct.ExtraData.certificate_chain', index=1,
      number=2, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\000\202\265\030\002 \001\202\265\030\005(\377\377\377\007\202\265\030\0058\377\377\377\007')),
    _descriptor.FieldDescriptor(
      name='precert_chain_entry', full_name='ct.ExtraData.precert_chain_entry', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\001')),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1500,
  serialized_end=1708,
)


_PARSEDENTRY = _descriptor.Descriptor(
  name='ParsedEntry',
  full_name='ct.ParsedEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='merkle_leaf', full_name='ct.ParsedEntry.merkle_leaf', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='extra_data', full_name='ct.ParsedEntry.extra_data', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=1710,
  serialized_end=1799,
)

_KEYINFO.fields_by_name['type'].enum_type = _KEYINFO_KEYTYPE
_KEYINFO_KEYTYPE.containing_type = _KEYINFO;
_CTLOGMETADATA.fields_by_name['public_key_info'].message_type = _KEYINFO
_CTLOGS.fields_by_name['ctlog'].message_type = _CTLOGMETADATA
_AUDITINFO.fields_by_name['status'].enum_type = _VERIFYSTATUS
_AUDITEDSTH.fields_by_name['sth'].message_type = _STHRESPONSE
_AUDITEDSTH.fields_by_name['audit'].message_type = _AUDITINFO
_ENTRYANDPROOFRESPONSE.fields_by_name['entry'].message_type = _ENTRYRESPONSE
_MONITORSTATE.fields_by_name['verified_sth'].message_type = _STHRESPONSE
_MONITORSTATE.fields_by_name['pending_sth'].message_type = _STHRESPONSE
_MONITORSTATE.fields_by_name['verified_tree'].message_type = _COMPACTMERKLETREE
_TIMESTAMPEDENTRY.fields_by_name['entry_type'].enum_type = _LOGENTRYTYPE
_TIMESTAMPEDENTRY.fields_by_name['pre_cert'].message_type = _PRECERT
_MERKLETREELEAF.fields_by_name['version'].enum_type = _VERSION
_MERKLETREELEAF.fields_by_name['leaf_type'].enum_type = _MERKLELEAFTYPE
_MERKLETREELEAF.fields_by_name['timestamped_entry'].message_type = _TIMESTAMPEDENTRY
_EXTRADATA.fields_by_name['entry_type'].enum_type = _LOGENTRYTYPE
_EXTRADATA.fields_by_name['precert_chain_entry'].message_type = _PRECERTCHAINENTRY
_PARSEDENTRY.fields_by_name['merkle_leaf'].message_type = _MERKLETREELEAF
_PARSEDENTRY.fields_by_name['extra_data'].message_type = _EXTRADATA
DESCRIPTOR.message_types_by_name['KeyInfo'] = _KEYINFO
DESCRIPTOR.message_types_by_name['CompactMerkleTree'] = _COMPACTMERKLETREE
DESCRIPTOR.message_types_by_name['CtLogMetadata'] = _CTLOGMETADATA
DESCRIPTOR.message_types_by_name['CtLogs'] = _CTLOGS
DESCRIPTOR.message_types_by_name['SthResponse'] = _STHRESPONSE
DESCRIPTOR.message_types_by_name['AuditInfo'] = _AUDITINFO
DESCRIPTOR.message_types_by_name['AuditedSth'] = _AUDITEDSTH
DESCRIPTOR.message_types_by_name['EntryResponse'] = _ENTRYRESPONSE
DESCRIPTOR.message_types_by_name['ProofByHashResponse'] = _PROOFBYHASHRESPONSE
DESCRIPTOR.message_types_by_name['EntryAndProofResponse'] = _ENTRYANDPROOFRESPONSE
DESCRIPTOR.message_types_by_name['MonitorState'] = _MONITORSTATE
DESCRIPTOR.message_types_by_name['PreCert'] = _PRECERT
DESCRIPTOR.message_types_by_name['TimestampedEntry'] = _TIMESTAMPEDENTRY
DESCRIPTOR.message_types_by_name['MerkleTreeLeaf'] = _MERKLETREELEAF
DESCRIPTOR.message_types_by_name['PrecertChainEntry'] = _PRECERTCHAINENTRY
DESCRIPTOR.message_types_by_name['ExtraData'] = _EXTRADATA
DESCRIPTOR.message_types_by_name['ParsedEntry'] = _PARSEDENTRY

class KeyInfo(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _KEYINFO

  # @@protoc_insertion_point(class_scope:ct.KeyInfo)

class CompactMerkleTree(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _COMPACTMERKLETREE

  # @@protoc_insertion_point(class_scope:ct.CompactMerkleTree)

class CtLogMetadata(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CTLOGMETADATA

  # @@protoc_insertion_point(class_scope:ct.CtLogMetadata)

class CtLogs(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CTLOGS

  # @@protoc_insertion_point(class_scope:ct.CtLogs)

class SthResponse(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STHRESPONSE

  # @@protoc_insertion_point(class_scope:ct.SthResponse)

class AuditInfo(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _AUDITINFO

  # @@protoc_insertion_point(class_scope:ct.AuditInfo)

class AuditedSth(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _AUDITEDSTH

  # @@protoc_insertion_point(class_scope:ct.AuditedSth)

class EntryResponse(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ENTRYRESPONSE

  # @@protoc_insertion_point(class_scope:ct.EntryResponse)

class ProofByHashResponse(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PROOFBYHASHRESPONSE

  # @@protoc_insertion_point(class_scope:ct.ProofByHashResponse)

class EntryAndProofResponse(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _ENTRYANDPROOFRESPONSE

  # @@protoc_insertion_point(class_scope:ct.EntryAndProofResponse)

class MonitorState(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MONITORSTATE

  # @@protoc_insertion_point(class_scope:ct.MonitorState)

class PreCert(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PRECERT

  # @@protoc_insertion_point(class_scope:ct.PreCert)

class TimestampedEntry(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _TIMESTAMPEDENTRY

  # @@protoc_insertion_point(class_scope:ct.TimestampedEntry)

class MerkleTreeLeaf(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _MERKLETREELEAF

  # @@protoc_insertion_point(class_scope:ct.MerkleTreeLeaf)

class PrecertChainEntry(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PRECERTCHAINENTRY

  # @@protoc_insertion_point(class_scope:ct.PrecertChainEntry)

class ExtraData(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _EXTRADATA

  # @@protoc_insertion_point(class_scope:ct.ExtraData)

class ParsedEntry(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PARSEDENTRY

  # @@protoc_insertion_point(class_scope:ct.ParsedEntry)


_VERSION.has_options = True
_VERSION._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), '\212\265\030\003\020\377\001')
_MERKLELEAFTYPE.has_options = True
_MERKLELEAFTYPE._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), '\212\265\030\003\020\377\001')
_LOGENTRYTYPE.has_options = True
_LOGENTRYTYPE._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), '\212\265\030\004\020\377\377\003')
_PRECERT.fields_by_name['issuer_key_hash'].has_options = True
_PRECERT.fields_by_name['issuer_key_hash']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002\030 ')
_PRECERT.fields_by_name['tbs_certificate'].has_options = True
_PRECERT.fields_by_name['tbs_certificate']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002 \001\202\265\030\005(\377\377\377\007')
_TIMESTAMPEDENTRY.fields_by_name['asn1_cert'].has_options = True
_TIMESTAMPEDENTRY.fields_by_name['asn1_cert']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\000\202\265\030\002 \001\202\265\030\005(\377\377\377\007')
_TIMESTAMPEDENTRY.fields_by_name['pre_cert'].has_options = True
_TIMESTAMPEDENTRY.fields_by_name['pre_cert']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\001')
_TIMESTAMPEDENTRY.fields_by_name['ct_extensions'].has_options = True
_TIMESTAMPEDENTRY.fields_by_name['ct_extensions']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\004(\377\377\003')
_MERKLETREELEAF.fields_by_name['timestamped_entry'].has_options = True
_MERKLETREELEAF.fields_by_name['timestamped_entry']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\013B\tleaf_type\202\265\030\002H\000')
_PRECERTCHAINENTRY.fields_by_name['pre_certificate'].has_options = True
_PRECERTCHAINENTRY.fields_by_name['pre_certificate']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002 \001\202\265\030\005(\377\377\377\007')
_PRECERTCHAINENTRY.fields_by_name['precertificate_chain'].has_options = True
_PRECERTCHAINENTRY.fields_by_name['precertificate_chain']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002 \001\202\265\030\005(\377\377\377\007\202\265\030\0058\377\377\377\007')
_EXTRADATA.fields_by_name['entry_type'].has_options = True
_EXTRADATA.fields_by_name['entry_type']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\002P\001')
_EXTRADATA.fields_by_name['certificate_chain'].has_options = True
_EXTRADATA.fields_by_name['certificate_chain']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\000\202\265\030\002 \001\202\265\030\005(\377\377\377\007\202\265\030\0058\377\377\377\007')
_EXTRADATA.fields_by_name['precert_chain_entry'].has_options = True
_EXTRADATA.fields_by_name['precert_chain_entry']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), '\202\265\030\014B\nentry_type\202\265\030\002H\001')
# @@protoc_insertion_point(module_scope)
